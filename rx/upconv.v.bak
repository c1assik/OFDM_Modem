module upconv (
 
 input clk, rst,
 input signed [13:0] data_in_I, data_in_Q,
 
 output reg signed [13:0] data_out

);

reg signed [1:0] coef_i [3:0];
reg signed [1:0] coef_q [3:0];
reg [2:0] count;
reg signed[13:0] up_data_i, up_data_q;

initial
begin
coef_i[0] = 2'b00;
coef_i[1] = 2'b01;
coef_i[2] = 2'b00;
coef_i[3] = 2'b11;

coef_q[0] = 2'b01;
coef_q[1] = 2'b00;
coef_q[2] = 2'b11;
coef_q[3] = 2'b00;
data_out = 0;
count = 0;
end

always @(posedge clk or posedge rst)
begin
	if (rst) count <= 0;
	else if(count == 3'd3) count <= 0;
		else count <= count + 1;
end

always @(posedge clk or posedge rst)
begin
	if (rst) 
	begin
		data_out <= 0;
		up_data_i <= 0;
		up_data_q <= 0;
	end
	else 
	begin
	up_data_i <= data_in_I * coef_i[count] + coef_i[count] ;
	up_data_q <= data_in_Q * coef_q[count] + coef_i[count];
	data_out <=  up_data_i + up_data_q ;
	end
end

endmodule