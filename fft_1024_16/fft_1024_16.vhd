-- megafunction wizard: %FFT v2.1.3%
-- GENERATION: XML

-- ============================================================
-- Megafunction Name(s):
-- 			asj_fft_dualstream
-- ============================================================
-- Generated by FFT 2.1.3 [Altera, IP Toolbench 1.3.0 Build 208]
-- ************************************************************
-- THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
-- ************************************************************
-- Copyright (C) 1991-2012 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.

library IEEE;
use IEEE.std_logic_1164.all;
library fft_lib;
use fft_lib.fft_pack.all;

ENTITY fft_1024_16 IS
	PORT 
	(
		clk					: IN STD_LOGIC;
		reset				: IN STD_LOGIC;
		master_sink_dav		: IN STD_LOGIC;
		master_sink_sop		: IN STD_LOGIC;
		master_source_dav	: IN STD_LOGIC;
		inv_i				: IN STD_LOGIC;
		data_real_in		: IN STD_LOGIC_VECTOR(15 DOWNTO 0);
		data_imag_in		: IN STD_LOGIC_VECTOR(15 DOWNTO 0);
		fft_real_out		: OUT STD_LOGIC_VECTOR(15 DOWNTO 0);
		fft_imag_out		: OUT STD_LOGIC_VECTOR(15 DOWNTO 0);
		exponent_out		: OUT STD_LOGIC_VECTOR(5 DOWNTO 0);
		master_sink_ena		: OUT STD_LOGIC;
		master_source_sop	: OUT STD_LOGIC;
		master_source_eop	: OUT STD_LOGIC;
		master_source_ena	: OUT STD_LOGIC
	);
END fft_1024_16;

ARCHITECTURE SYN OF fft_1024_16 IS


	COMPONENT asj_fft_sglstream
		GENERIC 
		(
			nps			: NATURAL;
			bfp			: NATURAL;
			nume		: NATURAL;
			mpr			: NATURAL;
			twr			: NATURAL;
			bpr			: NATURAL;
			bpb			: NATURAL;
			fpr			: NATURAL;
			mram		: NATURAL;
			m512		: NATURAL;
			mult_type	: NATURAL;
			mult_imp	: NATURAL;
			srr			: STRING;
			rfs1		: STRING;
			rfs2		: STRING;
			rfs3		: STRING;
			rfc1		: STRING;
			rfc2		: STRING;
			rfc3		: STRING
		);
		PORT 
		(
			clk					: IN STD_LOGIC;
			reset				: IN STD_LOGIC;
			master_sink_dav		: IN STD_LOGIC;
			master_sink_sop		: IN STD_LOGIC;
			master_source_dav	: IN STD_LOGIC;
			inv_i				: IN STD_LOGIC;
			data_real_in		: IN STD_LOGIC_VECTOR (15 DOWNTO 0);
			data_imag_in		: IN STD_LOGIC_VECTOR (15 DOWNTO 0);
			fft_real_out		: OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
			fft_imag_out		: OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
			exponent_out		: OUT STD_LOGIC_VECTOR (5 DOWNTO 0);
			master_sink_ena		: OUT STD_LOGIC;
			master_source_sop	: OUT STD_LOGIC;
			master_source_eop	: OUT STD_LOGIC;
			master_source_ena	: OUT STD_LOGIC
		);
	END COMPONENT;
	
BEGIN

	asj_fft_dualstream_inst : asj_fft_sglstream
	GENERIC MAP 
	(
		nps => 1024,
		bfp => 1,
		nume => 1,
		mpr => 16,
		twr => 16,
		bpr => 16,
		bpb => 4,
		fpr => 4,
		mram => 0,
		m512 => 0,
		mult_type => 0,
		mult_imp => 0,
		srr => "AUTO_SHIFT_REGISTER_RECOGNITION=OFF",
		rfs1 => "fft_1024_16_1n1024sin.hex",
		rfs2 => "fft_1024_16_2n1024sin.hex",
		rfs3 => "fft_1024_16_3n1024sin.hex",
		rfc1 => "fft_1024_16_1n1024cos.hex",
		rfc2 => "fft_1024_16_2n1024cos.hex",
		rfc3 => "fft_1024_16_3n1024cos.hex"
	)
	PORT MAP 
	(
		clk 				=>  clk,
		reset 				=>  reset,
		master_sink_dav 	=>  master_sink_dav,
		master_sink_sop 	=>  master_sink_sop,
		master_source_dav 	=>  master_source_dav,
		inv_i 				=>  inv_i,
		data_real_in 		=>  data_real_in,
		data_imag_in 		=>  data_imag_in,
		fft_real_out 		=>  fft_real_out,
		fft_imag_out 		=>  fft_imag_out,
		exponent_out 		=>  exponent_out,
		master_sink_ena 	=>  master_sink_ena,
		master_source_sop 	=>  master_source_sop,
		master_source_eop 	=>  master_source_eop,
		master_source_ena 	=>  master_source_ena
	);


END SYN;
